/*
 * This file is generated by jOOQ.
 */
package ch.ffhs.savvy_spring.jooq.model.tables.records;


import ch.ffhs.savvy_spring.jooq.model.tables.Todo;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TodoRecord extends UpdatableRecordImpl<TodoRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.todo.id</code>.
     */
    public TodoRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.todo.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.todo.content</code>.
     */
    public TodoRecord setContent(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.todo.content</code>.
     */
    public String getContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.todo.todolist_id</code>.
     */
    public TodoRecord setTodolistId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.todo.todolist_id</code>.
     */
    public Integer getTodolistId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Todo.TODO.ID;
    }

    @Override
    public Field<String> field2() {
        return Todo.TODO.CONTENT;
    }

    @Override
    public Field<Integer> field3() {
        return Todo.TODO.TODOLIST_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public Integer component3() {
        return getTodolistId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public Integer value3() {
        return getTodolistId();
    }

    @Override
    public TodoRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TodoRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public TodoRecord value3(Integer value) {
        setTodolistId(value);
        return this;
    }

    @Override
    public TodoRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TodoRecord
     */
    public TodoRecord() {
        super(Todo.TODO);
    }

    /**
     * Create a detached, initialised TodoRecord
     */
    public TodoRecord(Integer id, String content, Integer todolistId) {
        super(Todo.TODO);

        setId(id);
        setContent(content);
        setTodolistId(todolistId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TodoRecord
     */
    public TodoRecord(ch.ffhs.savvy_spring.jooq.model.tables.pojos.Todo value) {
        super(Todo.TODO);

        if (value != null) {
            setId(value.getId());
            setContent(value.getContent());
            setTodolistId(value.getTodolistId());
            resetChangedOnNotNull();
        }
    }
}
